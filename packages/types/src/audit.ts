import * as z from "zod";

import { ObjId } from "./utils";

export enum AuditEventType {
  LOG_IN_USER = "LOG_IN_USER",
  CREATE_USER = "CREATE_USER",

  CREATE_MODEL = "CREATE_MODEL",
  UPDATE_MODEL = "UPDATE_MODEL",
  DELETE_MODEL = "DELETE_MODEL",
  DOWNLOAD_MODEL = "DOWNLOAD_MODEL",
  REQUEST_MODEL_DOWNLOAD = "REQUEST_MODEL_DOWNLOAD",

  DATASET_CREATED = "DATASET_CREATED",

  CREATE_DATASET = "CREATE_DATASET",
  UPDATE_DATASET = "UPDATE_DATASET",
  DELETE_DATASET = "DELETE_DATASET",
  DOWNLOAD_DATASET = "DOWNLOAD_DATASET",
  REQUEST_DATASET_DOWNLOAD = "REQUEST_DATASET_DOWNLOAD",

  NETWORK_TRAINED = "NETWORK_TRAINED",

  TRAING_NETWORK = "TRAING_NETWORK",
  CREATE_NETWORK = "CREATE_NETWORK",
  UPDATE_NETWORK = "UPDATE_NETWORK",
  DELETE_NETWORK = "DELETE_NETWORK",
  DOWNLOAD_NETWORK = "DOWNLOAD_NETWORK",
  REQUEST_NETWORK_DOWNLOAD = "REQUEST_NETWORK_DOWNLOAD",

  STOP_TASK = "STOP_TASK"
}

export const AuditEventBody = z.object({
  _id: ObjId,
  userId: ObjId.optional(),
  type: z.nativeEnum(AuditEventType),
  createdAt: z.date()
});

export type AuditEventDb = z.infer<typeof AuditEventBody>;
